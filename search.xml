<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/06/19/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>python新作——谷歌浏览器dino游戏</title>
    <url>/2024/06/20/python%E6%96%B0%E4%BD%9C%E2%80%94%E2%80%94%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8dino%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大家好，这是我建站后的第三篇（准确来说是第二篇）文章，看标题想必大家都知道作品叫什么了吧，就是谷歌浏览器在断网时会跳出的小恐龙游戏。今天我们利用python还原并提供您教程，并将代码开源，您可以随时取用，那我们……开整！</p>
<h3 id="第一部分-配置环境"><a href="#第一部分-配置环境" class="headerlink" title="第一部分:配置环境"></a>第一部分:配置环境</h3><p>编译器：pycharm社区版2024.1<br>插件：pygame</p>
<p>导入所用库,没有的可以去下载，具体方法不多赘述，网上有</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br></pre></td></tr></table></figure></div>

<h3 id="第二部分：设置基础变量"><a href="#第二部分：设置基础变量" class="headerlink" title="第二部分：设置基础变量"></a>第二部分：设置基础变量</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化pygame</span></span><br><span class="line">pygame.init()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置屏幕大小</span></span><br><span class="line">screen_width = <span class="number">800</span></span><br><span class="line">screen_height = <span class="number">400</span></span><br><span class="line">screen = pygame.display.set_mode((screen_width, screen_height))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置颜色</span></span><br><span class="line">white = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)  <span class="comment"># 背景颜色设置为白色</span></span><br><span class="line">black = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">green = (<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 设置时钟</span></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置字体</span></span><br><span class="line">font = pygame.font.Font(<span class="literal">None</span>, <span class="number">50</span>)</span><br></pre></td></tr></table></figure></div>

<p>接下来的步骤很重要，先放代码后讲解操作</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    dino_image = pygame.image.load(<span class="string">&#x27;dino.png&#x27;</span>).convert_alpha()</span><br><span class="line">    cactus_image = pygame.image.load(<span class="string">&#x27;cactus.png&#x27;</span>).convert_alpha()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 缩小图像</span></span><br><span class="line">    scale_factor = <span class="number">0.4</span> <span class="comment"># 缩小因子</span></span><br><span class="line">    dino_image = pygame.transform.scale(dino_image, (<span class="built_in">int</span>(dino_image.get_width() * scale_factor), <span class="built_in">int</span>(dino_image.get_height() * scale_factor)))</span><br><span class="line">    cactus_image = pygame.transform.scale(cactus_image, (<span class="built_in">int</span>(cactus_image.get_width() * scale_factor), <span class="built_in">int</span>(cactus_image.get_height() * scale_factor)))</span><br><span class="line"><span class="keyword">except</span> pygame.error <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Cannot load image: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>有经验的老同志可能看出来了，第2，3行图片并没有，所以需要从网上找到恐龙和仙人掌图片后分别重命名为dino.png 和cactus.png，对应代码中的第2 3行，并且把图片和代码源文件放置在同一文件夹里面！！！！要不然系统找不到！！！！如果嫌烦在本文结尾评论或者在B站私信我，我会将图片发送</p>
<h3 id="第三部分：加载角色类"><a href="#第三部分：加载角色类" class="headerlink" title="第三部分：加载角色类"></a>第三部分：加载角色类</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dino</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Dino, self).__init__()</span><br><span class="line">        self.image = dino_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = <span class="number">100</span></span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">50</span></span><br><span class="line">        self.gravity = <span class="number">0.5</span></span><br><span class="line">        self.velocity_y = <span class="number">0</span></span><br><span class="line">        self.jumping = <span class="literal">False</span></span><br><span class="line">        self.jump_height = -<span class="number">18</span> <span class="comment"># 跳跃高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.jumping:</span><br><span class="line">            self.velocity_y += self.gravity</span><br><span class="line">            self.rect.y += self.velocity_y</span><br><span class="line">            <span class="keyword">if</span> self.rect.bottom &gt;= screen_height - self.rect.height:</span><br><span class="line">                self.velocity_y = <span class="number">0</span></span><br><span class="line">                self.jumping = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.velocity_y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">jump</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.jumping:</span><br><span class="line">            self.jumping = <span class="literal">True</span></span><br><span class="line">            self.velocity_y = self.jump_height</span><br><span class="line"></span><br><span class="line"><span class="comment"># 障碍物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Obstacle</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Obstacle, self).__init__()</span><br><span class="line">        self.image = cactus_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = screen_width</span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">55</span>  <span class="comment"># 保持障碍物在屏幕底部的直线上</span></span><br><span class="line">        self.speed = <span class="number">2.7</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        self.rect.x -= self.speed</span><br><span class="line">        <span class="keyword">if</span> self.rect.x &lt; -self.rect.width:</span><br><span class="line">            self.kill()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建小恐龙实例</span></span><br><span class="line">dino = Dino()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建障碍物群组</span></span><br><span class="line">obstacles = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分数</span></span><br><span class="line">score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 游戏状态</span></span><br><span class="line">game_over = <span class="literal">False</span></span><br></pre></td></tr></table></figure></div>
<p>这一步中跳跃高度是我调教过的，可以自己更改，也可以搭配我提供的图片使用</p>
<h3 id="第四部分：游戏主循环"><a href="#第四部分：游戏主循环" class="headerlink" title="第四部分：游戏主循环"></a>第四部分：游戏主循环</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 游戏主循环</span></span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            running = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.KEYDOWN <span class="keyword">and</span> event.key == pygame.K_SPACE:</span><br><span class="line">            dino.jump()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新小恐龙</span></span><br><span class="line">    dino.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新障碍物</span></span><br><span class="line">    obstacles.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 障碍物生成</span></span><br><span class="line">    <span class="keyword">if</span> random.randint(<span class="number">1</span>, <span class="number">120</span>) == <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over: <span class="comment"># 每120帧大约有1个障碍物生成</span></span><br><span class="line">        obstacles.add(Obstacle())</span><br><span class="line">        <span class="keyword">if</span> random.randint (<span class="number">1</span>,<span class="number">120</span>) == <span class="number">2</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over:</span><br><span class="line">            obstacles.add = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 碰撞检测</span></span><br><span class="line">    <span class="keyword">if</span> pygame.sprite.spritecollide(dino, obstacles, <span class="literal">False</span>):</span><br><span class="line">        game_over = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制背景</span></span><br><span class="line">    screen.fill(white)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制小恐龙</span></span><br><span class="line">    screen.blit(dino.image, dino.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制障碍物</span></span><br><span class="line">    <span class="keyword">for</span> obstacle <span class="keyword">in</span> obstacles:</span><br><span class="line">        screen.blit(obstacle.image, obstacle.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示分数</span></span><br><span class="line">    score_text = font.render(<span class="string">f&quot;Score: <span class="subst">&#123;<span class="built_in">int</span>(score)&#125;</span>&quot;</span>, <span class="literal">True</span>, black)</span><br><span class="line">    screen.blit(score_text, (<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新屏幕显示</span></span><br><span class="line">    pygame.display.flip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 控制游戏帧率</span></span><br><span class="line">    clock.tick(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新分数</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> game_over:</span><br><span class="line">        score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 游戏结束处理</span></span><br><span class="line">    <span class="keyword">if</span> game_over:</span><br><span class="line">        screen.fill(black)</span><br><span class="line">        over_font = pygame.font.Font(<span class="literal">None</span>, <span class="number">70</span>)</span><br><span class="line">        over_text = over_font.render(<span class="string">&quot;Game Over&quot;</span>, <span class="literal">True</span>, white)</span><br><span class="line">        over_rect = over_text.get_rect(center=(screen_width // <span class="number">2</span>, screen_height // <span class="number">2</span>))</span><br><span class="line">        screen.blit(over_text, over_rect)</span><br><span class="line">        pygame.display.flip()</span><br><span class="line">        pygame.time.wait(<span class="number">3000</span>)</span><br><span class="line">        running = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出pygame</span></span><br><span class="line">pygame.quit()</span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>这一部分需要注意的是：障碍物生成频率和帧率是我调教过的，不要乱改！！！不要乱改！！！改了以后就会鬼畜一样几十个卡在一起出现，别问我怎么知道的。</p>
<h4 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h4><p>以上就是我的最新python作品的代码开源和介绍了，本文和代码为我原创，您可以拿去自用，但这是创作者的心血！！所以如果您要摘编请与我联系（一初中生的文章有啥好转载的，对吧【滑稽】），视频介绍请见哔哩哔哩，预计7月上旬发布（账号：Terry—zhang同学，本网站有链接）在此感谢您的观看，欢迎评论。</p>
]]></content>
      <tags>
        <tag>数码编程</tag>
      </tags>
  </entry>
  <entry>
    <title>本站10月更新日志  及第3季度运营报告</title>
    <url>/2024/10/02/terryzhang%E5%B0%8F%E7%AB%99-10%E6%9C%882%E6%97%A5%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="第一部分：更新功能"><a href="#第一部分：更新功能" class="headerlink" title="第一部分：更新功能"></a>第一部分：更新功能</h3><p>本次更新主要集中于对于网页模板的改善和分类</p>
]]></content>
      <tags>
        <tag>公告通知</tag>
      </tags>
  </entry>
  <entry>
    <title>studio从入门到精通——像乐高设计师一样创作   一</title>
    <url>/2024/06/22/studio%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E2%80%94%E2%80%94%E5%83%8F%E4%B9%90%E9%AB%98%E8%AE%BE%E8%AE%A1%E5%B8%88%E4%B8%80%E6%A0%B7%E5%88%9B%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>legostudio是丹麦乐高公司收购的bricklink公司开发的一款虚拟搭建软件，博主的代表作：<a class="link"   href="https://www.bilibili.com/opus/926206149746753571?spm_id_from=333.999.0.0/" >上海地铁02a01型列车 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>就是利用此软件制作，</p>
]]></content>
      <tags>
        <tag>乐高</tag>
      </tags>
  </entry>
  <entry>
    <title>微观世界，大美无言——新闻采访与写作活动.</title>
    <url>/2024/10/06/%E5%BE%AE%E8%A7%82%E4%B8%96%E7%95%8C%EF%BC%8C%E5%A4%A7%E7%BE%8E%E6%97%A0%E8%A8%80-%E2%80%94%E2%80%94%E6%96%B0%E9%97%BB%E9%87%87%E8%AE%BF%E4%B8%8E%E5%86%99%E4%BD%9C%E6%B4%BB%E5%8A%A8/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="aa044180fec71e1dc5a67e70599f39ade82e43ef334e79719d8779826b974cbf">065adb5c82ccb5c8cfde483e1bb11ad6597feb4fc78174b6aadf2d2e0ba7650494f350a419e387c3270ff3f95b17c2ca6bc33c5d240588ce79085bf1d2337ca3b19e16a80923ad39366c82b82f534a682e2d105d224fdd1706e83ab3edb8c93f09b42c3403d92117d28209ccd7b7e3b9e2b5b510bf92c11f19458233e1fa534e07d304e1df6b6a9603a86dbd2ab1dc6fe49541cbcb40fb814e2e3b32dfb570a033c4a6a85ebc79fc677e370d692f00886213b86e2747cd3b43ea3a6766dec8fd96b3d4d6f0d69579c23f49f5826574710247bec07abfc4deda4da0ec2b92e72264a73431111f702fe0bc0632c1109d008ae4607ebbd72026484d67f11afe535901998fee32303081b2b5adb632612f947eefe72eb5acce8ad9041e9d68dcc5cc1e77b9f44b830a2c3c0d68a81deaa75bea8fced63336329c34afc95820607ceb2f93c6f23ddf7dd6dbebad2a191d001be8a3d614949fa1b478b1c8e6de82ce5f66164f53517ebd113883962065e0d0d37b2074c7b120773a8d2f57c9e31c2ff2425471cc31978139005890063083c7059c529b60695fbfaac6b2813843ae4e729b278cb4177068eb6a3cd1c611bf903df251e6c2e19fef4e137c6af112a25af7d53484a35aace2d82d22db7f5d646561d079e4fb1a1efd65a53d619f82727ba9d680ad4f0a193457199d0ef2306593ea22018e52fb90d0383e99b02798c331e339092297a016c331ed462444d759465e97111ab9a9ad01df9a591bebf8343002e7e3ac933fc5bfc71279bfd926d2a2f135208debc08c5165069fd224cdf41b5ff191efde15f70245124fd441f7113dfdf204fb6729abbfddb5342b6a05407d4128c3eb7697fa7556af3ed6fac5c2f999968b02eeed6ea302364308fe06a72c4957f6798490312ab8d6869483ad8539cecba6cef0fc8c222dc0bde2ee26713fb5cdbb20b6183554417862155e900f28617ea92e194daae9c308374508c5ca5fd60e93859c58de33e0b5e9973a6ef59580e086683449e438f0c5914963ec316949210e68beae8436897de2ea8123bd23870590956500ba36d056772282f0d7b1ed312085f9cb61810b282aea4b08304134896e479960c232ede7bf65ae9673579ebc55f89f571821ab2d79f4e3aa975ebd323b6c7e281174ced7c2811e40abef61310e9aa5760ee1df4109d3d1d78b3daa0268a08154bc9c8ddd30491b08feac2022e9a96022c6a4cc015c1865bf6579a69711a19060e468ef7299bc91fe4ef27181b0e825519b9248ac6dd9b2e0a03b620551deed799320ee95483bce280d861e8ce85d7ba60d9f1a49828f69173b2ea40fc5dedbf4c1d456de346f2eef75eacc18a1e4ed7a96979e72060467136ac9dc5918470df5d1aa41777d1abb8883e996e63b025d359347ea76a14dbd311f8c7d51b9b55e06b8bd18070b4517280f4a465e83c34ed0add44150062ec591e5ed077df0dc7ff95eb4d7b4aec67eddbd29619cf6bf5a10ffa3edaeed32c357de5c43f3938ec2ee9765b37d7d83e34df1462e2267fb1c059e7c9dd18337288ff3f86eb9be27d6e223dc0550ce9a6ac49d095878fd6555c962f0639a3ad3cc1665b84b0e9df8530eb9e2a1db54909edb0f6bd30305c0925cec032c534453701dbe89c69d0f134685bb40a7cfa632a24f763657ec98b4ff26064f6f1d04ac8e1a419cfc89d00a0440b756e9c0a677d21e3bc38922536ec42f19dc5fe66b99dbcd4dc69620c8f85b796e5562c713a25b9afd83c01b72e24e680dac1a40e00ac4214c5b0a0ed04e5c2d8cf1fe8676714beed9ef7e4252eb9c456ad369fccc36c0d9aebfbea07fb7fa0f5fac5923ca579f815274d19348a3ad951c1578b6d8fb91d6b8aee26b6aaad9b781f2deb12a0ab07d60d68a0e94adb8f78ae0f3ca0af1e3c5ad33aed5ce5ea105b3a69504a1d0e697d134bd0223553b767e10e751dd7ff21fbad724d359f32049d1a42e9c9dc42f27a04856fe4b2cb012af762c65d5c8cbccee541681c472d309982a506cb78bae09c603cd3c6fae243e7c9ce7961f03efa9395fb5136a136d6cd8d3420d6f9505d01a54fdc4059d926fabe8d2d497f0a6193f5ace46bac2c3d9f65ff387c8c7ae1989000c148eb0b0048b00bb4b5f8ce98b5a23315de6c8bff438bff4d36bddab84d139702f43f0d006c0417983bccf277f3f19eac0a05fa7a772cb0c2970fded9b144047fa2c4ac8726eadd2fbd9db8064b905a0d1dfc8cb556d6f8ebbe1f3e27e36d10a2712c9b3792b6a2328a1eba96de259e4289e806befa10f8df0175c05061f09a8f8c1367282a218ddd005ba59e3571b3af183803b67c920e22e0cddc287bbfea480be68c71647b07ee9c66764d5ad7eddd8bf75f800344ae04d8a13a7f13153d39fdb0d8bd5e4e3468a6f6a54fa06f548d7d27d850955c1b830ab004892d5a77834ada4466b5184da37184c9bd667231b778deaf319355b8dc852ecd05a5de734d592f7f7bedd15cec23cf2498ec7e1f114831e72a26c390a31ba32bfa13fedee539bc5f37c3df1a331e21f17c684a1332761bca8b3b175a3fdf2ca01f06f8c8512cba9952c77a91aa3602ad598742e79dfef154cce826c21e50b4a42d5e47bdff65d74aef36ca34b20c221a5efd1ff2563d0dca4d3768ed639bd5bb370d66fea6ae8ad3ccdcb319574f5a872b6777ebd79bce6436b5b18a705c0930ff8d420c81deb01904ab2eba6c79c92a13a302cd8371118454bc80919d9f44619604e1d6b1fab73e702e5cd439d1d962566e9baff4707c7b76a88023e670e9c022ed189bece65d2b7039b73b3cdfc1809b867ef79b4d7c3b3f61ed0f599d6e7e3bcec07896db6e868e5f311775fbe98e3acd583555b2bd38bea18379cdf6f3d8e063cb09ae51fc1c848c8a996c31c505fb3b1319b6d546fc7448f5153d4ac26f96cd3d2da5000a8d33fc77371cdf113f67ed5a641fae361ceaaec5f7f6a4194522ef9e035dfa9b767177b36d1dfe4f69063d1afb31b5ea86de3cee050a6f6d379bc82d949a162229f34b0cc5b5e58ac6b5e42a8d0bf8629507ca3d2d40c2fae269fc58c30f8a8bb638e4872e4086bcd8a200978ac9d41dad934b559a3b0a2d7901006e8fea095d5b57e333cd5f2544798f737ed513719443fa7b7e068b75aec855ef799d91df43f55887045687794fc877d635947389745c58a7bd85556ed69aabb0dfcceb8ddc5636da0028b83363914f3acffdb548e46a8c6481983013f315d06a51bf1dd9171232a43faa63e2d52be2c85fa98b6df3c5a71e1e6a9b72bbeb920e273502000cc837069e3831c3ead790ed33009f495f379dabd1bc0c9276797b82be190548f16bcd3ee490ffedd5e87ea3d600b8f560b7f803779f9a58600917788de73e41d8a515e29b3e488a71213410d3808e53dab0f3573c522b5ac73bbb694d9197682e97b48dd863aabfd308eb13ab83c7415d1b4b1cc5631d8a584c6f9576e08e97c4e87746530ba095ccd7f7bf9a7dfe8c6010d5d42c7915df45a37b085c0c3e28b9bf14a14752c9577522d0b05061cc83b560210c25f3ea65e9cab2e6bc325a9d2ab8f44a5dc29daa25285cc3f6060eb74b6a862bb5ffdc9b345ab0687f0ac405cb00dfcd1bd1c145b86a927461f8468b27fcaad1aab8864f351fc57b668b9f272093414d4dc7055872f46601d1f06b9a3bf77c887b584f90771475708f83d561fb80ada6a51e00d9dcc6dc9bb38b5488e4bd92358ad52123d5de8bf23a6f0be4066c15be74979dbaefb88e8d7ca7ec7687bebed4c2ca7b03c1aaa19cb981b599b142ffb7dd422ca251028d9d0d07a2b95fdf086ab48db0fc4aa51c2c53d0b14e69cd827f5a9001f206fa10dde380d27b0f75a481a04c282a3797011a9741c06bcfd1b279b54b9c1cd699205d20878385d22acbd1d137d131b41c80649a66f2fe64afed3ddba697e485b3eebde0811d551e0ade8e1bde65a0384ab358be1502f903db5834b6a21a3150aa256c465cdc5f0f2d2a1c7d1c0776621dd119a79f2acd8bf21f4365ff94e9a5b45ee1675d78c49a34fa72045bba965e48d0362fc8d13aae77592e788d33f448a3d23040b30d6bd0c1a9a88402329d1c8029cb15e20f96180fd141eaeeec55df7c35107058631de8a1da6014a74ce366025a1f9d5038107e266840869f97e5527ca383e17c3</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-swup-reload-script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>学习资料</tag>
      </tags>
  </entry>
  <entry>
    <title>欢迎来到我的博客</title>
    <url>/2024/06/20/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　这里是terryzhang的小站，本人是一位初中生。本站前身是利用文小站建的<a class="link"   href="https://terryzhang.wss.cc/" >个人网站 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。由于文小站因为部分原因停止了技术支持和服务器提供，于是现将个人网址移动到本站，原网址于2024年7月1日起作废，若访问原网址出现404，为正常现象。本站利用hexo作为框架，使用js，HTML，css等语言进行编写，相比原网站更加美观，自定义度较高，能够更好分享我的生活和经验，网站还有诸多需要优化之处，还请多多指教。业余爱好者水平有限，有不足之处还请各位见谅，本站不定期更新，欢迎评论和关注，在此谢谢您光顾本站</p>
<pre><code>                                                    Terryzhang
                                                    2024-6-20
</code></pre>
]]></content>
      <tags>
        <tag>公告通知</tag>
      </tags>
  </entry>
</search>
