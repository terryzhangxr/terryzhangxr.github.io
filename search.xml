<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>本站10月更新日志  及第3季度运营报告</title>
    <url>/2024/10/02/terryzhang%E5%B0%8F%E7%AB%99-10%E6%9C%882%E6%97%A5%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="第一部分：更新功能"><a href="#第一部分：更新功能" class="headerlink" title="第一部分：更新功能"></a>第一部分：更新功能</h3><p>本次更新主要集中于对于网页模板的改善和分类</p>
]]></content>
      <tags>
        <tag>公告通知</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/06/19/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>studio从入门到精通——像乐高设计师一样创作   一</title>
    <url>/2024/06/22/studio%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E2%80%94%E2%80%94%E5%83%8F%E4%B9%90%E9%AB%98%E8%AE%BE%E8%AE%A1%E5%B8%88%E4%B8%80%E6%A0%B7%E5%88%9B%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>legostudio是丹麦乐高公司收购的bricklink公司开发的一款虚拟搭建软件，博主的代表作：<a class="link"   href="https://www.bilibili.com/opus/926206149746753571?spm_id_from=333.999.0.0/" >上海地铁02a01型列车 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>就是利用此软件制作，</p>
]]></content>
      <tags>
        <tag>乐高</tag>
      </tags>
  </entry>
  <entry>
    <title>欢迎来到我的博客</title>
    <url>/2024/06/20/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　这里是terryzhang的小站，本人是一位初中生。本站前身是利用文小站建的<a class="link"   href="https://terryzhang.wss.cc/" >个人网站 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。由于文小站因为部分原因停止了技术支持和服务器提供，于是现将个人网址移动到本站，原网址于2024年7月1日起作废，若访问原网址出现404，为正常现象。本站利用hexo作为框架，使用js，HTML，css等语言进行编写，相比原网站更加美观，自定义度较高，能够更好分享我的生活和经验，网站还有诸多需要优化之处，还请多多指教。业余爱好者水平有限，有不足之处还请各位见谅，本站不定期更新，欢迎评论和关注，在此谢谢您光顾本站</p>
<pre><code>                                                    Terryzhang
                                                    2024-6-20
</code></pre>
]]></content>
      <tags>
        <tag>公告通知</tag>
      </tags>
  </entry>
  <entry>
    <title>python新作——谷歌浏览器dino游戏</title>
    <url>/2024/06/20/python%E6%96%B0%E4%BD%9C%E2%80%94%E2%80%94%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8dino%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大家好，这是我建站后的第三篇（准确来说是第二篇）文章，看标题想必大家都知道作品叫什么了吧，就是谷歌浏览器在断网时会跳出的小恐龙游戏。今天我们利用python还原并提供您教程，并将代码开源，您可以随时取用，那我们……开整！</p>
<h3 id="第一部分-配置环境"><a href="#第一部分-配置环境" class="headerlink" title="第一部分:配置环境"></a>第一部分:配置环境</h3><p>编译器：pycharm社区版2024.1<br>插件：pygame</p>
<p>导入所用库,没有的可以去下载，具体方法不多赘述，网上有</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br></pre></td></tr></table></figure></div>

<h3 id="第二部分：设置基础变量"><a href="#第二部分：设置基础变量" class="headerlink" title="第二部分：设置基础变量"></a>第二部分：设置基础变量</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化pygame</span></span><br><span class="line">pygame.init()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置屏幕大小</span></span><br><span class="line">screen_width = <span class="number">800</span></span><br><span class="line">screen_height = <span class="number">400</span></span><br><span class="line">screen = pygame.display.set_mode((screen_width, screen_height))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置颜色</span></span><br><span class="line">white = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)  <span class="comment"># 背景颜色设置为白色</span></span><br><span class="line">black = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">green = (<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 设置时钟</span></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置字体</span></span><br><span class="line">font = pygame.font.Font(<span class="literal">None</span>, <span class="number">50</span>)</span><br></pre></td></tr></table></figure></div>

<p>接下来的步骤很重要，先放代码后讲解操作</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    dino_image = pygame.image.load(<span class="string">&#x27;dino.png&#x27;</span>).convert_alpha()</span><br><span class="line">    cactus_image = pygame.image.load(<span class="string">&#x27;cactus.png&#x27;</span>).convert_alpha()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 缩小图像</span></span><br><span class="line">    scale_factor = <span class="number">0.4</span> <span class="comment"># 缩小因子</span></span><br><span class="line">    dino_image = pygame.transform.scale(dino_image, (<span class="built_in">int</span>(dino_image.get_width() * scale_factor), <span class="built_in">int</span>(dino_image.get_height() * scale_factor)))</span><br><span class="line">    cactus_image = pygame.transform.scale(cactus_image, (<span class="built_in">int</span>(cactus_image.get_width() * scale_factor), <span class="built_in">int</span>(cactus_image.get_height() * scale_factor)))</span><br><span class="line"><span class="keyword">except</span> pygame.error <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Cannot load image: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>有经验的老同志可能看出来了，第2，3行图片并没有，所以需要从网上找到恐龙和仙人掌图片后分别重命名为dino.png 和cactus.png，对应代码中的第2 3行，并且把图片和代码源文件放置在同一文件夹里面！！！！要不然系统找不到！！！！如果嫌烦在本文结尾评论或者在B站私信我，我会将图片发送</p>
<h3 id="第三部分：加载角色类"><a href="#第三部分：加载角色类" class="headerlink" title="第三部分：加载角色类"></a>第三部分：加载角色类</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dino</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Dino, self).__init__()</span><br><span class="line">        self.image = dino_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = <span class="number">100</span></span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">50</span></span><br><span class="line">        self.gravity = <span class="number">0.5</span></span><br><span class="line">        self.velocity_y = <span class="number">0</span></span><br><span class="line">        self.jumping = <span class="literal">False</span></span><br><span class="line">        self.jump_height = -<span class="number">18</span> <span class="comment"># 跳跃高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.jumping:</span><br><span class="line">            self.velocity_y += self.gravity</span><br><span class="line">            self.rect.y += self.velocity_y</span><br><span class="line">            <span class="keyword">if</span> self.rect.bottom &gt;= screen_height - self.rect.height:</span><br><span class="line">                self.velocity_y = <span class="number">0</span></span><br><span class="line">                self.jumping = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.velocity_y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">jump</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.jumping:</span><br><span class="line">            self.jumping = <span class="literal">True</span></span><br><span class="line">            self.velocity_y = self.jump_height</span><br><span class="line"></span><br><span class="line"><span class="comment"># 障碍物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Obstacle</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Obstacle, self).__init__()</span><br><span class="line">        self.image = cactus_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = screen_width</span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">55</span>  <span class="comment"># 保持障碍物在屏幕底部的直线上</span></span><br><span class="line">        self.speed = <span class="number">2.7</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        self.rect.x -= self.speed</span><br><span class="line">        <span class="keyword">if</span> self.rect.x &lt; -self.rect.width:</span><br><span class="line">            self.kill()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建小恐龙实例</span></span><br><span class="line">dino = Dino()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建障碍物群组</span></span><br><span class="line">obstacles = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分数</span></span><br><span class="line">score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 游戏状态</span></span><br><span class="line">game_over = <span class="literal">False</span></span><br></pre></td></tr></table></figure></div>
<p>这一步中跳跃高度是我调教过的，可以自己更改，也可以搭配我提供的图片使用</p>
<h3 id="第四部分：游戏主循环"><a href="#第四部分：游戏主循环" class="headerlink" title="第四部分：游戏主循环"></a>第四部分：游戏主循环</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 游戏主循环</span></span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            running = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.KEYDOWN <span class="keyword">and</span> event.key == pygame.K_SPACE:</span><br><span class="line">            dino.jump()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新小恐龙</span></span><br><span class="line">    dino.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新障碍物</span></span><br><span class="line">    obstacles.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 障碍物生成</span></span><br><span class="line">    <span class="keyword">if</span> random.randint(<span class="number">1</span>, <span class="number">120</span>) == <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over: <span class="comment"># 每120帧大约有1个障碍物生成</span></span><br><span class="line">        obstacles.add(Obstacle())</span><br><span class="line">        <span class="keyword">if</span> random.randint (<span class="number">1</span>,<span class="number">120</span>) == <span class="number">2</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over:</span><br><span class="line">            obstacles.add = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 碰撞检测</span></span><br><span class="line">    <span class="keyword">if</span> pygame.sprite.spritecollide(dino, obstacles, <span class="literal">False</span>):</span><br><span class="line">        game_over = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制背景</span></span><br><span class="line">    screen.fill(white)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制小恐龙</span></span><br><span class="line">    screen.blit(dino.image, dino.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制障碍物</span></span><br><span class="line">    <span class="keyword">for</span> obstacle <span class="keyword">in</span> obstacles:</span><br><span class="line">        screen.blit(obstacle.image, obstacle.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示分数</span></span><br><span class="line">    score_text = font.render(<span class="string">f&quot;Score: <span class="subst">&#123;<span class="built_in">int</span>(score)&#125;</span>&quot;</span>, <span class="literal">True</span>, black)</span><br><span class="line">    screen.blit(score_text, (<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新屏幕显示</span></span><br><span class="line">    pygame.display.flip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 控制游戏帧率</span></span><br><span class="line">    clock.tick(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新分数</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> game_over:</span><br><span class="line">        score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 游戏结束处理</span></span><br><span class="line">    <span class="keyword">if</span> game_over:</span><br><span class="line">        screen.fill(black)</span><br><span class="line">        over_font = pygame.font.Font(<span class="literal">None</span>, <span class="number">70</span>)</span><br><span class="line">        over_text = over_font.render(<span class="string">&quot;Game Over&quot;</span>, <span class="literal">True</span>, white)</span><br><span class="line">        over_rect = over_text.get_rect(center=(screen_width // <span class="number">2</span>, screen_height // <span class="number">2</span>))</span><br><span class="line">        screen.blit(over_text, over_rect)</span><br><span class="line">        pygame.display.flip()</span><br><span class="line">        pygame.time.wait(<span class="number">3000</span>)</span><br><span class="line">        running = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出pygame</span></span><br><span class="line">pygame.quit()</span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>这一部分需要注意的是：障碍物生成频率和帧率是我调教过的，不要乱改！！！不要乱改！！！改了以后就会鬼畜一样几十个卡在一起出现，别问我怎么知道的。</p>
<h4 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h4><p>以上就是我的最新python作品的代码开源和介绍了，本文和代码为我原创，您可以拿去自用，但这是创作者的心血！！所以如果您要摘编请与我联系（一初中生的文章有啥好转载的，对吧【滑稽】），视频介绍请见哔哩哔哩，预计7月上旬发布（账号：Terry—zhang同学，本网站有链接）在此感谢您的观看，欢迎评论。</p>
]]></content>
      <tags>
        <tag>数码编程</tag>
      </tags>
  </entry>
  <entry>
    <title>微观世界，大美无言——新闻采访与写作活动</title>
    <url>/2024/10/06/%E5%BE%AE%E8%A7%82%E4%B8%96%E7%95%8C%EF%BC%8C%E5%A4%A7%E7%BE%8E%E6%97%A0%E8%A8%80-%E2%80%94%E2%80%94%E6%96%B0%E9%97%BB%E9%87%87%E8%AE%BF%E4%B8%8E%E5%86%99%E4%BD%9C%E6%B4%BB%E5%8A%A8/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2378ece84b22a9b58f79575c8e5c413f1c33b6aeec7da51c823d114aefe075c9">065adb5c82ccb5c8cfde483e1bb11ad6597feb4fc78174b6aadf2d2e0ba7650494f350a419e387c3270ff3f95b17c2ca6bc33c5d240588ce79085bf1d2337ca3b19e16a80923ad39366c82b82f534a682e2d105d224fdd1706e83ab3edb8c93f09b42c3403d92117d28209ccd7b7e3b9e2b5b510bf92c11f19458233e1fa534e07d304e1df6b6a9603a86dbd2ab1dc6fe49541cbcb40fb814e2e3b32dfb570a033c4a6a85ebc79fc677e370d692f00886213b86e2747cd3b43ea3a6766dec8fd96b3d4d6f0d69579c23f49f5826574710247bec07abfc4deda4da0ec2b92e72264a73431111f702fe0bc0632c1109d008ae4607ebbd72026484d67f11afe535901998fee32303081b2b5adb632612f947eefe72eb5acce8ad9041e9d68dcc5cc1e77b9f44b830a2c3c0d68a81deaa75bea8fced63336329c34afc95820607ceb2f93c6f23ddf7dd6dbebad2a191d001be8a3d614949fa1b478b1c8e6de82ce5f66164f53517ebd113883962065e0d0d37b2074c7b120773a8d2f57c9e31c2ff2425471cc31978139005890063083c7059c529b60695fbfaac6b2813843ae4e729b278cb4177068eb6a3cd1c611bf903df251e6c2e19fef4e137c6af112a25af7d4d4e1bf7442a17a23ccb5f7311958ff48663181e0871b12e475af322f9114ae4566e71dcf7273755492f400ae4546e6e65922c5ae852a337273e8d6460717b6d4207d6a92974d8882d19712741bd4500185794a0db8d0a4bf9f4435a52c41fc319089659dad52147d7bb4f9e26ed85d4a8b39a0b549c9e2546e3ae4fc53c9ed6b82b8f8fd212a0671e6176cf82013f5063e249399e616874a35459452bc185e901698cd3c39b991efac0d456f0501220c71996262b8c1ac9c0cf73e36d9eef8e80db4956e51b38395f72bd0fb925fec3ec577552f907732293d57e2603cf39b52d1eb98df81b416b2c42ae7e30d473f431c6d5bc8550cc0b82c852322b69ad8bd17fe9cf5a988bbf7d154e65fe9b56b134b17040707ea65aee3896e1c30b79e72e74aa565265d87405eafd8c433ffac36f4ddf5d1461b2f9d5462ff6bb40875081719262535b57a05811f4c2de7e5d08ff46ac4eeb9721c263c54253bddb5483c5fb397933024bb35d3ae7b78498250f2629782f4dd2434ceb2bf84762202f5d50956f6d36d06a5b84a128fbf3c18cccc7e8c45289cd96e72e858ac3fcfe157da3dbd708654e03077b2cc8dc34e7b9c900cdc234e1e175e0b486fe05d66fa35e0a373384a636f9ebef84504e040335a49137fa241376e9d48ee93d003463fe804f8b4657641fab7247a3d7072dd8f1fff942e3d66fef59cf63bafa254859f71462abb99437fe25f4cbcedb9b011a125f8b11110d2ddafcd944026422e37f6c6cdefc945595c072f50b1b349456a82279582ca95be84314084a9d68dbc229f2082a2a4d42971d91bb4a7e7ab32a998dc7e8a7428bccf63be680477ccbdf6f4d3628e01199a956d1a0341cfa6735ece25dd26b44a9d2210d9e7fdeac9832e67edadd57940d1e966b33b3dcbaadec93de485f201c18de98009542851d141baf58b992cda44e0dbd7ea93a78d12c49d36835ebd13424eb777839df2c6a512fede2e64d6a21468960af47256ccb159c7cbffb55a0fe08a7b0e2f79cb8baa99fd26e4110ad9545d62684506f292a4d13c3c9b9d06d50b9e378aa9dd3682d13cda997b0c1c410e4de5dc80c326f7ddb04b9aa13693b2145b0f15a887ea597e1d92ef2881b4fe88a4f2f7a46b7a1305d3be8cf2d7a1bb956faa7edb5152c0c1290ce57aad292b015bb64426c05fff9b144c59b99cd21f9851fc7c8f3b51b998db0c7c759a507e06295ad32b2abebf4ad4a46b37805e7031260ac3ff8ac56c633dcd76fd2275bc806b65aebc8aa854502aaface35e76776142abfd4e73f3ef9e98d10ea8ffb9cf73f343959cbe503ee2496952b42aa1f5eab8b6fac11da7e2453bcce1b685d869cf83615c76a84c703523a6b1adce57acafe15c94e5036cb5bbfed53b353e56c518fa0ab711e256a0d4bad2102a1c3198274a6dc9c409cd6d21301b22f48fe8a61d2165a4c1f7bd79bbe27f2f8f03766c4d1c88495b73cf4a8f9f31c8caf70187f05bbb111fad56776381c9a29c6db3c4bd1fe88030248a2df20ca3869fdcae021b43eacd052c2478745f83070dd590486fe8fe4447a75d8fac913830d258289617c24c628da7a5a88069a8df1c766c1eeef60022d0f728fd2bae7db414d9adcb22fa9410097cb34834e14024e4247b54b655c9678a52429e98dab319a5b547dc2f05822dc18d7f2c38927d200d5cc830e168a493677f40b142e4ac69f7863221d457fed4c07fb85911ab9ac357a7ff82048250f0ba8f2ba213d68e1ae1095695203347dbee9eb3cd19368530183846c62707a89ce47fba350cddbfd35d63330125a7dc4732b8fc3e3ab54a6033f1e13f7d4acd30083729939b4cff5d2427b927497e4f84d884fb55a0b4accdd4fed0a86a5ecdcb873e7ee2118af7d3296f0bbba44405dac47077698c2e9999f818e4e49c4e75ccd6952dae73629e81e1a10b2700737ddbb153a2b416beabb908ef60e3e1c444c69b28fd549b5408cf2a482332063bd5bdd8dfc7f94508a5db0a4197d242789fa4a17c17c3d765b7467d9a33b35ac31fb02b8cae35cfcd5c1fa09f22a15283bcf2ac17693b5650b8eb0db38345d2e431dbee18a1e339989b368dd2851532916d107254f2e9290c46eaa261cd5c3489d4eed020a7614c8b60857930b4ad43fd609f43b46e566288335aed86bfb1208fcf3f445f1803ebfc58fedc75c1e9df5024de4bd3046e361a59732e1f8a933e3b8537d7921f425a859ebe7d5970547df3241676b3c2b2d6e196a59e36fd6a758a18894dc1e91d892a7bf09cb85f3ca3890fcf44630299bb8898574b2d9818c7e9b677e257f906e0b010daab6266a9dacf51f37431af6ac3d5a6368edc8c2517d944ecc72bee6d2cffe24182adeac6b9991c3262b06b74cd96d98c5260ff1d7211ce05f38cfe7b741d4d8f4a30881b42b37f762d254979013aebcc40541991a4ed1aabd8ae80556c43d3459d51eccb40e6ba8d49101d420182023a1f273cfb3ab363a3ce60401e4480ba5259e5c3b8d22d9d1cb365d13a264644ce1fb16dc27240fc8d81ac02aa1d6079641ec22ea3e218442fd96daa67788a2ca6a4e7931f9fbb016651007102b18c1661cb1ca3cf78c19319188bee32fc918cdb498ce8657fb80c09f588c4b903b2c83d00117354b9e70a4d417c98df9018bd803ba91b8c6ca5833f6ca6c0bd9d34d1537932c142d4be1ea6aa491b1d6bbd086dc452c82109565febb63c7dcbaaa5f925990d2c91348b87874a50b8d4efabae8355e89825ae7d203f522537768d40ab75ee8292f8712351729ac1022cacff95a92d5c4a8675e9dfe23c7169f982eb87c4cffc4dd0b056aaca74110d0afbd3098d4f6127377fc60a65490ac48d030522c96ffdee44b08e56bf4f8a9e14be4d36973effc1423f3b31cf0f09404aa329b764bb4aaf72db6d201b0aab968020fc16fd15ab6ae03cbdd79a92a015bd4d6f822acaef3cd42e50ae8e76e8eb9c397e1783db64fc6126ec82afe38b925b8d7a2c189b8a039bcb41307f3c9070048d3eade279d10271b1306e528735445b1d9f776ecb6862007d549a3e77602c538f94200674773f3a01c890f23de945741ad70c7c363f6622b5742c98ac795c7564699d13997db6819713c364107af6c26b2c0e0dfaed8f3d536d5fbddd25501739b881f1a9ada37517938e07601bf009d71ca33302982d75fd2fab394ad68859f13b971b0e79a097019d2df95be17a75bd3d52f36fedba5678682af1c87c73a7a8bb1b8e12c2fb023861972185bbdcfdb9fe28b56ffac0d32aa43ade5a023ef79dd29e88c38f022864ab8819422b4ab679fe250c22b9966659b91b26ecdc97aa125cb49c3b9863a58824c351c0feaddfff8b0f18404ff5b21e51b60699982d70c1898a76711fae1853b03e9400cc845facc37b984895542b5ee1efcb8583f5f29897d6703bca37b342641ae4d939f64fd0e7337537275ab6f09e86a382526cca9bc32add5d3bf14075962657ae1c33c1349ced263ba69722e2b81b6c3119cf0af4abb9c762152805cae095bf7d986dfa9c59021ca515b5f831472bedd5cc78a365c9b0f6bddded8ffefe2f45275bddf19c80d35027</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-swup-reload-script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>学习资料</tag>
      </tags>
  </entry>
</search>
