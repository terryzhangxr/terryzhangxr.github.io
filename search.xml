<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python新作——谷歌浏览器dino游戏</title>
    <url>/2024/06/20/python%E6%96%B0%E4%BD%9C%E2%80%94%E2%80%94%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8dino%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>说到google chrome，很多人都会想到它标志性的断网小游戏——chrome dino，今日，我们利用python还原并将代码开源，欢迎随时取用。话不多说，直接进入正题       </p>
<h3 id="第一部分-配置环境"><a href="#第一部分-配置环境" class="headerlink" title="第一部分:配置环境"></a>第一部分:配置环境</h3><p>编译器：pycharm社区版2024.1<br>插件：pygame</p>
<p>导入所用库,没有的可以去下载，具体方法不多赘述，网上有</p>
<div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br></pre></td></tr></table></figure></div>

<h3 id="第二部分：设置基础变量"><a href="#第二部分：设置基础变量" class="headerlink" title="第二部分：设置基础变量"></a>第二部分：设置基础变量</h3><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化pygame</span></span><br><span class="line">pygame.init()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置屏幕大小</span></span><br><span class="line">screen_width = <span class="number">800</span></span><br><span class="line">screen_height = <span class="number">400</span></span><br><span class="line">screen = pygame.display.set_mode((screen_width, screen_height))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置颜色</span></span><br><span class="line">white = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)  <span class="comment"># 背景颜色设置为白色</span></span><br><span class="line">black = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">green = (<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 设置时钟</span></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置字体</span></span><br><span class="line">font = pygame.font.Font(<span class="literal">None</span>, <span class="number">50</span>)</span><br></pre></td></tr></table></figure></div>

<p>接下来的步骤很重要，先放代码后讲解操作</p>
<div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    dino_image = pygame.image.load(<span class="string">&#x27;dino.png&#x27;</span>).convert_alpha()</span><br><span class="line">    cactus_image = pygame.image.load(<span class="string">&#x27;cactus.png&#x27;</span>).convert_alpha()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 缩小图像</span></span><br><span class="line">    scale_factor = <span class="number">0.4</span> <span class="comment"># 缩小因子</span></span><br><span class="line">    dino_image = pygame.transform.scale(dino_image, (<span class="built_in">int</span>(dino_image.get_width() * scale_factor), <span class="built_in">int</span>(dino_image.get_height() * scale_factor)))</span><br><span class="line">    cactus_image = pygame.transform.scale(cactus_image, (<span class="built_in">int</span>(cactus_image.get_width() * scale_factor), <span class="built_in">int</span>(cactus_image.get_height() * scale_factor)))</span><br><span class="line"><span class="keyword">except</span> pygame.error <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Cannot load image: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>有经验的老同志可能看出来了，第2，3行图片并没有，所以需要从网上找到恐龙和仙人掌图片后分别重命名为dino.png 和cactus.png，对应代码中的第2 3行，并且把图片和代码源文件放置在同一文件夹里面！！！！要不然系统找不到！！！！如果嫌烦在本文结尾评论或者在B站私信我，我会将图片发送</p>
<h3 id="第三部分：加载角色类"><a href="#第三部分：加载角色类" class="headerlink" title="第三部分：加载角色类"></a>第三部分：加载角色类</h3><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dino</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Dino, self).__init__()</span><br><span class="line">        self.image = dino_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = <span class="number">100</span></span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">50</span></span><br><span class="line">        self.gravity = <span class="number">0.5</span></span><br><span class="line">        self.velocity_y = <span class="number">0</span></span><br><span class="line">        self.jumping = <span class="literal">False</span></span><br><span class="line">        self.jump_height = -<span class="number">18</span> <span class="comment"># 跳跃高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.jumping:</span><br><span class="line">            self.velocity_y += self.gravity</span><br><span class="line">            self.rect.y += self.velocity_y</span><br><span class="line">            <span class="keyword">if</span> self.rect.bottom &gt;= screen_height - self.rect.height:</span><br><span class="line">                self.velocity_y = <span class="number">0</span></span><br><span class="line">                self.jumping = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.velocity_y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">jump</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.jumping:</span><br><span class="line">            self.jumping = <span class="literal">True</span></span><br><span class="line">            self.velocity_y = self.jump_height</span><br><span class="line"></span><br><span class="line"><span class="comment"># 障碍物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Obstacle</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Obstacle, self).__init__()</span><br><span class="line">        self.image = cactus_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = screen_width</span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">55</span>  <span class="comment"># 保持障碍物在屏幕底部的直线上</span></span><br><span class="line">        self.speed = <span class="number">2.7</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        self.rect.x -= self.speed</span><br><span class="line">        <span class="keyword">if</span> self.rect.x &lt; -self.rect.width:</span><br><span class="line">            self.kill()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建小恐龙实例</span></span><br><span class="line">dino = Dino()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建障碍物群组</span></span><br><span class="line">obstacles = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分数</span></span><br><span class="line">score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 游戏状态</span></span><br><span class="line">game_over = <span class="literal">False</span></span><br></pre></td></tr></table></figure></div>
<p>这一步中跳跃高度是我调教过的，可以自己更改，也可以搭配我提供的图片使用</p>
<h3 id="第四部分：游戏主循环"><a href="#第四部分：游戏主循环" class="headerlink" title="第四部分：游戏主循环"></a>第四部分：游戏主循环</h3><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 游戏主循环</span></span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            running = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.KEYDOWN <span class="keyword">and</span> event.key == pygame.K_SPACE:</span><br><span class="line">            dino.jump()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新小恐龙</span></span><br><span class="line">    dino.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新障碍物</span></span><br><span class="line">    obstacles.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 障碍物生成</span></span><br><span class="line">    <span class="keyword">if</span> random.randint(<span class="number">1</span>, <span class="number">120</span>) == <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over: <span class="comment"># 每120帧大约有1个障碍物生成</span></span><br><span class="line">        obstacles.add(Obstacle())</span><br><span class="line">        <span class="keyword">if</span> random.randint (<span class="number">1</span>,<span class="number">120</span>) == <span class="number">2</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over:</span><br><span class="line">            obstacles.add = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 碰撞检测</span></span><br><span class="line">    <span class="keyword">if</span> pygame.sprite.spritecollide(dino, obstacles, <span class="literal">False</span>):</span><br><span class="line">        game_over = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制背景</span></span><br><span class="line">    screen.fill(white)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制小恐龙</span></span><br><span class="line">    screen.blit(dino.image, dino.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制障碍物</span></span><br><span class="line">    <span class="keyword">for</span> obstacle <span class="keyword">in</span> obstacles:</span><br><span class="line">        screen.blit(obstacle.image, obstacle.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示分数</span></span><br><span class="line">    score_text = font.render(<span class="string">f&quot;Score: <span class="subst">&#123;<span class="built_in">int</span>(score)&#125;</span>&quot;</span>, <span class="literal">True</span>, black)</span><br><span class="line">    screen.blit(score_text, (<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新屏幕显示</span></span><br><span class="line">    pygame.display.flip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 控制游戏帧率</span></span><br><span class="line">    clock.tick(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新分数</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> game_over:</span><br><span class="line">        score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 游戏结束处理</span></span><br><span class="line">    <span class="keyword">if</span> game_over:</span><br><span class="line">        screen.fill(black)</span><br><span class="line">        over_font = pygame.font.Font(<span class="literal">None</span>, <span class="number">70</span>)</span><br><span class="line">        over_text = over_font.render(<span class="string">&quot;Game Over&quot;</span>, <span class="literal">True</span>, white)</span><br><span class="line">        over_rect = over_text.get_rect(center=(screen_width // <span class="number">2</span>, screen_height // <span class="number">2</span>))</span><br><span class="line">        screen.blit(over_text, over_rect)</span><br><span class="line">        pygame.display.flip()</span><br><span class="line">        pygame.time.wait(<span class="number">3000</span>)</span><br><span class="line">        running = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出pygame</span></span><br><span class="line">pygame.quit()</span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>这一部分需要注意的是：障碍物生成频率和帧率是我调教过的，不要乱改！！！不要乱改！！！改了以后就会鬼畜一样几十个卡在一起出现，别问我怎么知道的。</p>
<h4 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h4><p>以上就是我的最新python作品的代码开源和介绍了，本文和代码为我原创，您可以拿去自用，但这是创作者的心血！！所以如果您要摘编请与我联系（一初中生的文章有啥好转载的，对吧【滑稽】），视频介绍请见哔哩哔哩，预计7月上旬发布（账号：Terry—zhang同学，本网站有链接）在此感谢您的观看，欢迎评论。</p>
]]></content>
      <categories>
        <category>数码编程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>studio从入门到精通——像乐高设计师一样创作   一</title>
    <url>/2024/11/07/studio%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E2%80%94%E2%80%94%E5%83%8F%E4%B9%90%E9%AB%98%E8%AE%BE%E8%AE%A1%E5%B8%88%E4%B8%80%E6%A0%B7%E5%88%9B%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>legostudio是丹麦乐高公司收购的bricklink公司开发的一款虚拟搭建软件，博主的代表作：<a class="link"   href="https://www.bilibili.com/opus/926206149746753571?spm_id_from=333.999.0.0/" >上海地铁02a01型列车<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>就是利用此软件制作，接下来，我将详细指导您下载，使用 lego studio2.0</p>
<h2 id="第一部分-下载："><a href="#第一部分-下载：" class="headerlink" title="第一部分 下载："></a>第一部分 下载：</h2><p>studio是由丹麦bricklink公司所开发运营，可点击<a class="link"   href="https://www.bricklink.com/v3/studio/download.page" >下载链接<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，如下<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic.imgdb.cn/item/675af1f4d0e0a243d4e30661.png"
                      alt="bricklink" title="可选的标题"
                ><br>点击下载Windows版本，windows版本需要大于win7。按照常规流程和安装提示安装即可，此处不过多赘述</p>

  <div class="note p-4 mb-4 rounded-small blue">
    <p>建议下载地址选择C盘，避免作品丢失</p>

  </div>

<h2 id="第二部分-初阶使用："><a href="#第二部分-初阶使用：" class="headerlink" title="第二部分 初阶使用："></a>第二部分 初阶使用：</h2><p>当完成下载后，双击打开，studio2.0。开启时加载时间可能会很长，请耐心等待，若提示“未响应”，不必惊慌，大约1分钟后会自动启动。当您的电脑出现如下的界面，恭喜您，你正式成为了一名乐高的mocer<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic.imgdb.cn/item/675af24ad0e0a243d4e3066e.png"
                      alt="studio" title="可选的标题"
                ><br>开始界面的“p42”和”hxd1”是博主的作品，您的主页没有不必惊慌。<br>接下来点击”create“按钮打开一个新的界面，如下<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic.imgdb.cn/item/675af268d0e0a243d4e30673.png"
                      alt="studio work" title="可选的标题"
                >这张图下面的指导可以对照。</p>
<h4 id="2-1-页面功能介绍"><a href="#2-1-页面功能介绍" class="headerlink" title="2.1 页面功能介绍"></a>2.1 页面功能介绍</h4><p>1.在新界面左侧许多的砖块，您可以通过在对应的砖块上用左键拖动至工作区，当砖块被选中时轮廓呈蓝色，若需要改变砖块颜色，请选中后在右侧”colour palette”处选择颜色并单击想要的颜色。</p>
<p>2.在页面的左下角有一个”total parts”提示框，您可以通过此处查看您的用砖情况</p>
<p>3.在工作区的左侧有砖块分类区域，您可以查找砖块编号和零件种类</p>
<p>请在开始创作前将顶部菜单栏的”snap”按钮点亮至蓝色，如下<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic.imgdb.cn/item/675af2bad0e0a243d4e30679.png"
                      alt="菜单设置" title="可选的标题"
                ></p>
<h4 id="2-2-操作指导"><a href="#2-2-操作指导" class="headerlink" title="2.2 操作指导"></a>2.2 操作指导</h4><p>下面为基本鼠标操作指导：</p>

  <div class="note p-4 mb-4 rounded-small green">
    <p>按住右键拖动为改变作品视角</p>

  </div>


  <div class="note p-4 mb-4 rounded-small green">
    <p>键盘上的”w“ 键为上升视角，”s“键为下降视角，”a“键向左移动视角，”d“键向右移动视角</p>

  </div>


  <div class="note p-4 mb-4 rounded-small green">
    <p>左键为拖动砖块，选中砖块。当砖块被选中时轮廓呈蓝色</p>

  </div>


  <div class="note p-4 mb-4 rounded-small green">
    <p>键盘上“上下左右”按键可以调节零件或作品方向。若需要细调角度，可用左键单击零件或选中后出现两个蓝色按钮，点击左侧的圆弧箭头按钮，即可开始调节</p>

  </div>

<p>具体操作可观看如下视频，可最大化观看。进阶教程将后期发布</p>
 
 <iframe src="https://cccimg.com/player.php?hash=b762a42e61b9eb15dd2beedace135d0c" width="400" height="300" scrolling="no" frameborder="0"></iframe>

]]></content>
      <categories>
        <category>乐高</category>
      </categories>
      <tags>
        <tag>lego studio</tag>
      </tags>
  </entry>
  <entry>
    <title>微观世界，大美无言——新闻采访与写作活动.</title>
    <url>/2024/10/06/%E5%BE%AE%E8%A7%82%E4%B8%96%E7%95%8C%EF%BC%8C%E5%A4%A7%E7%BE%8E%E6%97%A0%E8%A8%80-%E2%80%94%E2%80%94%E6%96%B0%E9%97%BB%E9%87%87%E8%AE%BF%E4%B8%8E%E5%86%99%E4%BD%9C%E6%B4%BB%E5%8A%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="二次元热潮下的新舞台：漫展文化的广泛发展期待"><a href="#二次元热潮下的新舞台：漫展文化的广泛发展期待" class="headerlink" title="二次元热潮下的新舞台：漫展文化的广泛发展期待."></a>二次元热潮下的新舞台：漫展文化的广泛发展期待.</h2><p>近日，本报记者对一位热衷于二次元文化的女学生进行了专访，深入了解了她参加漫展的经历、感受，以及她对漫展未来发展的期待。</p>
<p>这位女学生首次接触漫展是在今年的5月1日，至今已经参加了三次漫展活动。对她而言，出cosplay（角色扮演）不仅是一种爱好，更是一种对二次元角色的热爱和致敬。她希望通过自己的努力，将二次元角色带入到现实生活中，让更多人了解和喜爱这些角色。</p>
<p>在漫展上，她总是能发现一些令人欣喜的瞬间。当别人认出自己扮演的角色时，她会感到非常开心和满足。她认为，这说明自己的cosplay得到了别人的认可和喜爱，也是对自己努力的一种肯定。此外，漫展还为她提供了一个与其他有相同爱好的人交流的平台，她们可以一起讨论剧情、分享心得，共同感受二次元文化的魅力。</p>
<p>对于小学生喜欢二次元的现象，她表示理解并持开放态度。她认为，随着网络的发展，每个年代都会有一些不同的现象，而小学生喜欢二次元只是其中的一种表现。她相信，只要引导得当，这种爱好并不会对孩子们的成长产生负面影响，反而能够培养他们的审美情趣和创造力。</p>
<p>在谈到漫展的未来发展时，她表达了自己的期待。她认为，当前的漫展活动在地域上还存在一定的局限性，很多地方都没有举办过漫展。因此，她希望漫展能够更广泛地推广和发展，让更多人有机会参与到这个交流平台中来，共同感受二次元文化的魅力。</p>
<p>“漫展本来就是给大家交流各自的兴趣爱好的一个平台，”她说道，“所以我觉得它可以在更多的地方发展，让更多人了解和喜爱二次元文化。”</p>
<p>此次采访让我们更深入地了解了二次元文化和漫展活动的魅力所在。相信在未来的日子里，漫展会越来越受到人们的关注和喜爱，成为更多人交流兴趣爱好、感受二次元文化的重要平台。</p>
<p>随着二次元文化的不断普及，漫展作为连接爱好者的平台，其影响力和吸引力正在不断扩大。我们期待看到更多像这位女学生一样的爱好者，通过漫展这一平台，分享他们的热情，推动二次元文化的健康发展。</p>
<a class="button  center large" href='https://comment.mrzxr.top' title='博客留言板'>博客留言板</a>
]]></content>
      <categories>
        <category>学习资料</category>
      </categories>
  </entry>
  <entry>
    <title>欢迎来到我的博客</title>
    <url>/2024/06/20/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　这里是terryzhang的小站，本人是一位初中生。本站前身是利用文小站建的<a class="link"   href="https://terryzhang.wss.cc/" >个人网站<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> 。由于文小站因为部分原因停止了技术支持和服务器提供，于是现将个人网址移动到本站，原网址于2024年7月1日起作废，若访问原网址出现404，为正常现象。本站利用hexo作为框架，使用js，HTML，css等语言进行编写，相比原网站更加美观，自定义度较高，能够更好分享我的生活和经验，网站还有诸多需要优化之处，还请多多指教。业余爱好者水平有限，有不足之处还请各位见谅，本站不定期更新，欢迎评论和关注，在此谢谢您光顾本站</p>
<pre><code>                                                    Terryzhang
                                                    2024-6-20
</code></pre>
]]></content>
      <categories>
        <category>公告通知</category>
      </categories>
  </entry>
  <entry>
    <title>本站10月更新日志  及第3季度运营报告</title>
    <url>/2024/10/06/%E6%9C%AC%E7%AB%9910%E6%9C%88%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97%20%20%E5%8F%8A%E7%AC%AC3%E5%AD%A3%E5%BA%A6%E8%BF%90%E8%90%A5%E6%8A%A5%E5%91%8A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>
  <div class="note p-4 mb-4 rounded-small blue">
    <p>域名已更新至”mrzxr.top”!!!!!</p>

  </div>
<h2 id="第一部分：更新功能"><a href="#第一部分：更新功能" class="headerlink" title="第一部分：更新功能"></a>第一部分：更新功能</h2><p>本次更新主要集中于对于网页模板的改善和分类以及更新了域名”mrzxr.top”，使得整体页面更出彩，更个性</p>
<h3 id="1-1新增归档功能"><a href="#1-1新增归档功能" class="headerlink" title="1.1新增归档功能."></a>1.1新增归档功能.</h3><p>在网页菜单栏中新增“archive”按钮，访客可以通过点击归档按钮看到本博客的全部文章和发布时间，使得博文更加条理清晰。</p>
<h3 id="1-2新增搜索功能"><a href="#1-2新增搜索功能" class="headerlink" title="1.2新增搜索功能."></a>1.2新增搜索功能.</h3><p>访客可以在网页右上角点击放大镜按钮即可看到搜索框，通过搜索关键词即可定位到具体博文，方便查找博客内容。</p>
<h3 id="1-3新增”tags”链接"><a href="#1-3新增”tags”链接" class="headerlink" title="1.3新增”tags”链接."></a>1.3新增”tags”链接.</h3><p>访客可点击”link”按钮在跳出的二级菜单栏中找到“学习资料”、“数码编程”、“乐高”、“公告通知”四个标签，选择需要的链接点击即可查找到与该标签内容相关的文章。</p>
<h3 id="1-4新增评论及留言板功能"><a href="#1-4新增评论及留言板功能" class="headerlink" title="1.4新增评论及留言板功能."></a>1.4新增评论及留言板功能.</h3><p>本站近期开通了评论功能，访客可在文章末尾评论，点击菜单栏的”comment”按钮可跳转至<a class="link"   href="https://comment.mrzxr.top/" >留言板<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>评论，关于博客文章的评论请在文章末尾评论，关于博客的杂谈等请去往留言板</p>
<h3 id="1-5页面改版"><a href="#1-5页面改版" class="headerlink" title="1.5页面改版."></a>1.5页面改版.</h3><p>本站将网页背景和主色调进行更改，更符合本网页的主题和作者审美，更加个性化。</p>
<h2 id="第二部分：运营报告"><a href="#第二部分：运营报告" class="headerlink" title="第二部分：运营报告."></a>第二部分：运营报告.</h2><p>本站始建于2024年6月20日，至今已安全运行108天，共计产出5篇文章，生成4个标签，其中一篇正在连载中（托更中），预计第四季度可产出2-3篇完整文章，欢迎持续关注。</p>
<h2 id="结语："><a href="#结语：" class="headerlink" title="结语："></a>结语：</h2><p>我是terryzhang，一个平凡的初中生。相见就是缘分。这里，是我的后花园，也是大家的茶馆。欢迎关注我的blog、bilibili，也欢迎去留言版评论，期待下次和你相见~。</p>
]]></content>
      <categories>
        <category>公告通知</category>
      </categories>
      <tags>
        <tag>更新</tag>
      </tags>
  </entry>
</search>
