<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>studio从入门到精通——像乐高设计师一样创作   一</title>
    <url>/2024/06/22/studio%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E2%80%94%E2%80%94%E5%83%8F%E4%B9%90%E9%AB%98%E8%AE%BE%E8%AE%A1%E5%B8%88%E4%B8%80%E6%A0%B7%E5%88%9B%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>legostudio是丹麦乐高公司收购的bricklink公司开发的一款虚拟搭建软件，博主的代表作：<a class="link"   href="https://www.bilibili.com/opus/926206149746753571?spm_id_from=333.999.0.0/" >上海地铁02a01型列车 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>就是利用此软件制作，</p>
]]></content>
      <tags>
        <tag>乐高</tag>
      </tags>
  </entry>
  <entry>
    <title>python新作——谷歌浏览器dino游戏</title>
    <url>/2024/06/20/python%E6%96%B0%E4%BD%9C%E2%80%94%E2%80%94%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8dino%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大家好，这是我建站后的第三篇（准确来说是第二篇）文章，看标题想必大家都知道作品叫什么了吧，就是谷歌浏览器在断网时会跳出的小恐龙游戏。今天我们利用python还原并提供您教程，并将代码开源，您可以随时取用，那我们……开整！</p>
<h3 id="第一部分-配置环境"><a href="#第一部分-配置环境" class="headerlink" title="第一部分:配置环境"></a>第一部分:配置环境</h3><p>编译器：pycharm社区版2024.1<br>插件：pygame</p>
<p>导入所用库,没有的可以去下载，具体方法不多赘述，网上有</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br></pre></td></tr></table></figure></div>

<h3 id="第二部分：设置基础变量"><a href="#第二部分：设置基础变量" class="headerlink" title="第二部分：设置基础变量"></a>第二部分：设置基础变量</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化pygame</span></span><br><span class="line">pygame.init()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置屏幕大小</span></span><br><span class="line">screen_width = <span class="number">800</span></span><br><span class="line">screen_height = <span class="number">400</span></span><br><span class="line">screen = pygame.display.set_mode((screen_width, screen_height))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置颜色</span></span><br><span class="line">white = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)  <span class="comment"># 背景颜色设置为白色</span></span><br><span class="line">black = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">green = (<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 设置时钟</span></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置字体</span></span><br><span class="line">font = pygame.font.Font(<span class="literal">None</span>, <span class="number">50</span>)</span><br></pre></td></tr></table></figure></div>

<p>接下来的步骤很重要，先放代码后讲解操作</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    dino_image = pygame.image.load(<span class="string">&#x27;dino.png&#x27;</span>).convert_alpha()</span><br><span class="line">    cactus_image = pygame.image.load(<span class="string">&#x27;cactus.png&#x27;</span>).convert_alpha()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 缩小图像</span></span><br><span class="line">    scale_factor = <span class="number">0.4</span> <span class="comment"># 缩小因子</span></span><br><span class="line">    dino_image = pygame.transform.scale(dino_image, (<span class="built_in">int</span>(dino_image.get_width() * scale_factor), <span class="built_in">int</span>(dino_image.get_height() * scale_factor)))</span><br><span class="line">    cactus_image = pygame.transform.scale(cactus_image, (<span class="built_in">int</span>(cactus_image.get_width() * scale_factor), <span class="built_in">int</span>(cactus_image.get_height() * scale_factor)))</span><br><span class="line"><span class="keyword">except</span> pygame.error <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Cannot load image: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>有经验的老同志可能看出来了，第2，3行图片并没有，所以需要从网上找到恐龙和仙人掌图片后分别重命名为dino.png 和cactus.png，对应代码中的第2 3行，并且把图片和代码源文件放置在同一文件夹里面！！！！要不然系统找不到！！！！如果嫌烦在本文结尾评论或者在B站私信我，我会将图片发送</p>
<h3 id="第三部分：加载角色类"><a href="#第三部分：加载角色类" class="headerlink" title="第三部分：加载角色类"></a>第三部分：加载角色类</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dino</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Dino, self).__init__()</span><br><span class="line">        self.image = dino_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = <span class="number">100</span></span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">50</span></span><br><span class="line">        self.gravity = <span class="number">0.5</span></span><br><span class="line">        self.velocity_y = <span class="number">0</span></span><br><span class="line">        self.jumping = <span class="literal">False</span></span><br><span class="line">        self.jump_height = -<span class="number">18</span> <span class="comment"># 跳跃高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.jumping:</span><br><span class="line">            self.velocity_y += self.gravity</span><br><span class="line">            self.rect.y += self.velocity_y</span><br><span class="line">            <span class="keyword">if</span> self.rect.bottom &gt;= screen_height - self.rect.height:</span><br><span class="line">                self.velocity_y = <span class="number">0</span></span><br><span class="line">                self.jumping = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.velocity_y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">jump</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.jumping:</span><br><span class="line">            self.jumping = <span class="literal">True</span></span><br><span class="line">            self.velocity_y = self.jump_height</span><br><span class="line"></span><br><span class="line"><span class="comment"># 障碍物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Obstacle</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Obstacle, self).__init__()</span><br><span class="line">        self.image = cactus_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = screen_width</span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">55</span>  <span class="comment"># 保持障碍物在屏幕底部的直线上</span></span><br><span class="line">        self.speed = <span class="number">2.7</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        self.rect.x -= self.speed</span><br><span class="line">        <span class="keyword">if</span> self.rect.x &lt; -self.rect.width:</span><br><span class="line">            self.kill()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建小恐龙实例</span></span><br><span class="line">dino = Dino()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建障碍物群组</span></span><br><span class="line">obstacles = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分数</span></span><br><span class="line">score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 游戏状态</span></span><br><span class="line">game_over = <span class="literal">False</span></span><br></pre></td></tr></table></figure></div>
<p>这一步中跳跃高度是我调教过的，可以自己更改，也可以搭配我提供的图片使用</p>
<h3 id="第四部分：游戏主循环"><a href="#第四部分：游戏主循环" class="headerlink" title="第四部分：游戏主循环"></a>第四部分：游戏主循环</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 游戏主循环</span></span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            running = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.KEYDOWN <span class="keyword">and</span> event.key == pygame.K_SPACE:</span><br><span class="line">            dino.jump()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新小恐龙</span></span><br><span class="line">    dino.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新障碍物</span></span><br><span class="line">    obstacles.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 障碍物生成</span></span><br><span class="line">    <span class="keyword">if</span> random.randint(<span class="number">1</span>, <span class="number">120</span>) == <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over: <span class="comment"># 每120帧大约有1个障碍物生成</span></span><br><span class="line">        obstacles.add(Obstacle())</span><br><span class="line">        <span class="keyword">if</span> random.randint (<span class="number">1</span>,<span class="number">120</span>) == <span class="number">2</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over:</span><br><span class="line">            obstacles.add = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 碰撞检测</span></span><br><span class="line">    <span class="keyword">if</span> pygame.sprite.spritecollide(dino, obstacles, <span class="literal">False</span>):</span><br><span class="line">        game_over = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制背景</span></span><br><span class="line">    screen.fill(white)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制小恐龙</span></span><br><span class="line">    screen.blit(dino.image, dino.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制障碍物</span></span><br><span class="line">    <span class="keyword">for</span> obstacle <span class="keyword">in</span> obstacles:</span><br><span class="line">        screen.blit(obstacle.image, obstacle.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示分数</span></span><br><span class="line">    score_text = font.render(<span class="string">f&quot;Score: <span class="subst">&#123;<span class="built_in">int</span>(score)&#125;</span>&quot;</span>, <span class="literal">True</span>, black)</span><br><span class="line">    screen.blit(score_text, (<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新屏幕显示</span></span><br><span class="line">    pygame.display.flip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 控制游戏帧率</span></span><br><span class="line">    clock.tick(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新分数</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> game_over:</span><br><span class="line">        score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 游戏结束处理</span></span><br><span class="line">    <span class="keyword">if</span> game_over:</span><br><span class="line">        screen.fill(black)</span><br><span class="line">        over_font = pygame.font.Font(<span class="literal">None</span>, <span class="number">70</span>)</span><br><span class="line">        over_text = over_font.render(<span class="string">&quot;Game Over&quot;</span>, <span class="literal">True</span>, white)</span><br><span class="line">        over_rect = over_text.get_rect(center=(screen_width // <span class="number">2</span>, screen_height // <span class="number">2</span>))</span><br><span class="line">        screen.blit(over_text, over_rect)</span><br><span class="line">        pygame.display.flip()</span><br><span class="line">        pygame.time.wait(<span class="number">3000</span>)</span><br><span class="line">        running = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出pygame</span></span><br><span class="line">pygame.quit()</span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>这一部分需要注意的是：障碍物生成频率和帧率是我调教过的，不要乱改！！！不要乱改！！！改了以后就会鬼畜一样几十个卡在一起出现，别问我怎么知道的。</p>
<h4 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h4><p>以上就是我的最新python作品的代码开源和介绍了，本文和代码为我原创，您可以拿去自用，但这是创作者的心血！！所以如果您要摘编请与我联系（一初中生的文章有啥好转载的，对吧【滑稽】），视频介绍请见哔哩哔哩，预计7月上旬发布（账号：Terry—zhang同学，本网站有链接）在此感谢您的观看，欢迎评论。</p>
]]></content>
      <tags>
        <tag>数码编程</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/06/19/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>乐高火车moc—hxd1 1000系电力机车</title>
    <url>/2024/07/26/%E4%B9%90%E9%AB%98%E7%81%AB%E8%BD%A6moc%E2%80%94hxd1%201000%E7%B3%BB%E7%94%B5%E5%8A%9B%E6%9C%BA%E8%BD%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <tags>
        <tag>乐高</tag>
      </tags>
  </entry>
  <entry>
    <title>欢迎来到我的博客</title>
    <url>/2024/06/20/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　这里是terryzhang的小站，本人是一位初中生。本站前身是利用文小站建的<a class="link"   href="https://terryzhang.wss.cc/" >个人网站 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。由于文小站因为部分原因停止了技术支持和服务器提供，于是现将个人网址移动到本站，原网址于2024年7月1日起作废，若访问原网址出现404，为正常现象。本站利用hexo作为框架，使用js，HTML，css等语言进行编写，相比原网站更加美观，自定义度较高，能够更好分享我的生活和经验，网站还有诸多需要优化之处，还请多多指教。业余爱好者水平有限，有不足之处还请各位见谅，本站不定期更新，欢迎评论和关注，在此谢谢您光顾本站</p>
<pre><code>                                                    Terryzhang
                                                    2024-6-20
</code></pre>
]]></content>
      <tags>
        <tag>公告通知</tag>
      </tags>
  </entry>
</search>
