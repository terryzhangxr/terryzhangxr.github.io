<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/06/19/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>微观世界，大美无言——新闻采访与写作活动.</title>
    <url>/2024/10/06/%E5%BE%AE%E8%A7%82%E4%B8%96%E7%95%8C%EF%BC%8C%E5%A4%A7%E7%BE%8E%E6%97%A0%E8%A8%80-%E2%80%94%E2%80%94%E6%96%B0%E9%97%BB%E9%87%87%E8%AE%BF%E4%B8%8E%E5%86%99%E4%BD%9C%E6%B4%BB%E5%8A%A8/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d3830b16b4c06a10266db29fa815c8b8d030dd5058771f92f49291482c98ecb5">6db7b1fc53ab454a243b2b0ca2f5c72542cb4843aab248b3ef02b65c9de57a72b69b8ca0104c9103a859cb29cfae7236e45dbf96285679bd59a1079e83028815c153abd09ce23100d86587a43f3990709610e7d59c44ea48e85bb9c1fccafd1cf28db785fd73c38ca731bb3944a04ab40a201037155f0ea0e6b915ef7f439127385a9665ed09a8775bc169354cdc69c7edef20eab7d0d134a36d0fb52c2f3e5ea898fda9989d8a9ff903868ac27834f0a27badd62c6a43147b1ce46796256bf2f4f0fdaa75d074d1c55b6f6f986733bc56a43cfb86b60bd22b9801fd380801151d355aeeb4e349780ee1d66acd79f2f6c7f795dbbd20d790cf228fa326530d0a8607bd93de0998783960c8206e1d20df52bbf2278a07c63fbb07a82111b38b4e707b2bfab5535df8cb4d4cf1f3a44e296d6d71780fac7036810a91fd221533bc23d81dc595d5d1d8523ad668573f5ce1f128277e0c202e18d41bf2fde762b549044eaa775d04eaaa22ab616a58bd897e30e396c33cbfb79c58d2b8d6b62012b94b92a944ad68fe805c031a9c357ec42861ea0b9eb99f0c88eb1b784f802ce1aaa249a220dd794ee38e2bc741055b4c14b3e946a36e2127769ee89b94eead4269452b5886bbd25cd37eed57b8b58953e0d82067a2a197f33797aeef60d7de91502008088c969a47ee84e386ee94e04a3d8ca5f0bf530bb945c24d77d96a6572ed4effc9d71b07cfd8d3207280e372c35c77d485a86f9ab6370cd7bbb0213dccabeaa73f6e95df10d7ee1bf4261e587f21ec0147f7b1fe070989770066f2219a477d71be1b28c20ef5bd9e55da0a8e6e6cd27bac31b7fc4b6e9eb073f8133772643372c416b41c2010ec2255842afac9a8eda4a960bd7f08029a873a247c44c9335e14dd62bc5a0cd00407a305f55be036cde25d5c60a157c8427a4d04d35c7352a985e3138a4e3a4064328b605bd363f13c5d22684009b601fa4e63e9e9b044b300a31ff2241da9e4abb44e94a57f5d9c9b2ca2890f766f971ed258fc09af7d6bf1f1722b6a8ddf5a16d268d352fe554dc93dbd69498253b9e49dacf59030f4e0db89aaaabd1b7d38150236d391a801cdb04e0f6f95de69c5aea02af84781368c0b5ea618d9267ae31effa69916cbf9c40cd0a44daa9403803a5c1042572644fe87d04798454c8a4322281877228ce6b8f89985699a44b2e71b6e58814fdafe0b141b99be3eb3d8de40b60453a9e7000e41d4832f0fd50bec62d300d2f29a3ad1eda1669e612da95316ba5d0cd522bdf58c9c746aa42498ecc41a6c5c69df3138622245bd2838f7f9b10a870858a43921fa6defd68cc3cd6c68b6897b6d71ef1f65ac7437c5a81453a09c213e40c2c4488edd0d5a4720c2b5d89b80d0e37c5c3c41be958732914571db84d2e60fdfbbb28ff873f6f5b4e36298862026c2ed0c006a1269a29c2d7d62d29d8a47fa37b81d14ac924840c17adeac2b676f84fa53087ef181a7693252fd7531898fae598a120d45149fd9acf2d5a5ae68aa39b109d66a8075f79bdf33c19b0da2a2b722949196465e1afc17bda9d91649902547d00cda28e094a859f7ddd98df6fb0887ace76e78a2fe1800120416e41f3197a86da0bf5cf103368196495955b83dd57f047379cd544b68eab9f1282bd7e1a9a2fadbb988b9f907a1c334ebdf35d40ca24fb029bc74463825782d6dd376c7fa7f43bb7bdb62accb41f296ccc2159e556bb563e88ccc6b1a6adedfa521d485e5c5101c5d01c77f09e53cbdaac9d3713b597455bb42dc63868ba432b27b79195e2c4b4c9f2b67aa982c3923655510a63689ac8abdc2f8fa91ec7afeabb7d60359503775354e92178159b901c7aa1171b734ec12a921a28bed12c4ee8e776a1955d31da78ece442fc5078cfa4a40bcde331a1609b5214feb0a64e2a7451430bde7fc462f1cabe0dee44c51b85a8e5f1429e00e42eacc5599f6026bf899fea98da939c731a645b4758e373d2b26699d57d8f4f9b003dc97a0b7b6d3c636a3724fc8c4eb17cd9044f0deab8ef4c5705e11e95cd6df39a1549952f8d3f8df25f6a0adbc53a5c92a939801158b0c35a7b7649690394f9b1fec04c7c6e82ed4e9e7b10a034c2594209e7fa0d785015525024a6d1fa6728ea73f3a09e1ea91e379e3cec7627873c27ccd4c0dda76bf0a134b69e652b467f5f84c367e52a2cb3b451c0820d06eecccc2e131305d3c2534fc43e08d317e681c98f8662eecc06efdc06d22e08e0941077587d6a468bbce77c3abc65bfa6a554d21f774010b9ae3d5caab629f50bea5076b2e66970ac2e5082fc426495b5b955d29fb650f5939130a7b80d02724373339f63d78aae5d87a86c5339bcaaeb52025888b7a1019d8b5600ca6e96c4751adeaacc857c55c665a106f28cb6131420c65288360b8326817347cb63a475dd266c349f6d2b353ad8f5467819fcf3bde4c296a9a7f6f1939394eed1a8d18d1a7f7a373c8d53678a05baad53153a45659a62828819afb0e518d42b8b753b59342abd96f989ff6db07d1716520a7d3314ef5e840bf3d351b94fde95a57bd40c1b8c1072ca7485c5bed9c112ffc9288001573f262f8cb26bac439c30b4cc15a3566d0f5c6d81cb068b38a6fe38b26af4838d0b9c06b0636efd9f576b9877ce897a741931272c17bbdd7a1dddc9e4190cac9d3c5b66a7fbe04ad8025a966bfcf1821616dce33ff889014e1af5e3cc475146115eaa7fac3d7f776d1d714acc43e373878d9e997d4b7d5f31a071502cdaa41f7c45dffaec722ada428401c25cddef71dbbacfad24992293403aec1515dfc4b791e40158e813ba6f7450f509cff55f8aa3762fd3966102bc515ee8e95fe65a5d688efdb410a838661192d69c437c24de0899dda2eda482a15d34cb0d768ab20357d23c82964e1ff2c26083e56d8ecbf8da5a856ba76be4d01e6e34c6122f622a57d37df8c378323a95cbb4b5a37d18c97979ffc447d40a4307021b6a21680623aafe43436593cb80ca095c11a2b980eab4cc8167669612c38b53e6e1f4849b5c79f61d86ae240baa11ffd9916e7adaf6b496128dd27ee7f4e915452ed0521d700eb9f90bad17156d86ee2472f9deb438b5f9457554dc14bf5d08fd24bb3ffc398eb375ea1a8bdada4072bd4a7be08f4294b6a92744604ac51d8965d4e4c085ee6174722dcea2ee9a0e499a0fbbc5f300ba16485ffa8b682111704292b81001842346a0a2e896a3ac7ba8a7fd7fcb00c5d6ea44fa9871fd9c505dcbc03f083715c791ff0a30706fce1d8a3744865c3e1260870513703fd9231374a8e9051fa4fa1aa1fbc8904fd22c3f17de48a072adffd0e69b03dd7382297a925c893f59e5f4d65c5a421a58536c04c705809c667433c92f221048d896de11c1bcc9e45263c38bffdc31ed0831a5d134cf3fabaea30aa7a4e63c679520b34387d86ef8764ca863156aa61de831c173a758c0d645df4dfa6733e2c0a8b918cf65587c2de615a1fcfe36a275a219edebf6f5e2903ab6a8348f443332b728841c4c2fca2f0e0c1fcf538f55c431e9f63ce845f3316ccda4b520ec81e6f5dfdce43a854b3147dda15c028afcfcbb7612b1570825ed8a04eee284e4ff323872524a19dfafd52611f357dc21a9183b845af88384f96e82d4e22a5b1f4fc440b46b5fd3a89999db86967384c85afd9052617fcad40156ca8aec6ce2ea61fc9a806c63b5553fd1580c054f835f6fbda90434bdbd88840f3fbdd271ae79f091c230ebe713733600fa29791043388c670c138eee608c8c4d4299e26b01a567a6b0f55acdfcd8e82613f93a91bc376e0864184fdafa8360da14087462d649cac33d4ff82e1b6ce4998b9fb2145f5870e59014e194a0d77da031863fc06ea46f50ffb2951ead77d11fc8321c2c97df6f90d497ab3e7183327f33090f9d5a91d564cfb498ef4901b7bee373d25bcb18acc5d6cf53d3d272d71079bcd267e22407abb95e96defa934310d25a66f5f4309a612e1594409cd77de097787ade5b989ab06b532083c93ac01c7b1d405a68b54504006707d58ef4aea90a3713b7d4f28181b6b8d2024746fcec63f5ca7aa73a86ef32de4465810600bf528afbab50ffc2b09bf6463119fa436c6d27dd1e40ac5fa8d491aaff306ee9e48c84c9ed44153d9ca71ff642e658f58965009d804b7fe95bfca1f1aebebaf354acd0808bcd8bdeb42a31d37b5fb721c7522552cf55465bcd954c8f947396e86adaa20d144c587743634ca65dc7c6d9064baba2cebc97b11d997b018a1b3da62efd5d1edd880ec04c459bb933199f7dd8aec0fea9d33b18d930c8b4083a0bb4aa340ee739cc5f24389545462801d223d905095193272ea8edf5a7a12bef2e7521a69e5c48c8ea7ae0d9311545e2b69d5b0109fa46c65418d2568ac8c3405a96fcd5d3c2d6c98c7cc1c2d5cda928064226f09e74aa7b5e4bed040b324374926eb31d6ddfefcb0639a5f9c42ec7411bba87090dee1382c946f61ae96e76ef31d07260b647a9369c36b0a6e754a6c182d6dcb799f09af76a623c910e57ce0a89f5d02ecfb6e4f527b01d18f2126f07d1f44f3d21f2cbc1b2fef18449180f398f990be8fa0a3ab9c618992938e0d71ef873fe20b33da57be6f5d5f8fa3ceff1f05d171cb933534dc3d1324ffee965e47251a107ded389f446f5b216d39418e9bc13969ec53d58e1e00d8bb43bb886e4965051bac925a53b79de082857aea5c564a445ee75d95586e430f47b77392de435463237ed9a3e3e5e30fe1b327b6ad54ead4ddb621bd8f3d6e723dc83e3e0a6691ee73b48bfa96ca4e8d23cd4f3df2026b2b1ed91dd0b95927f15f46e196e5b49d3de00db1f8d9aafc95e1c412219aee1abba308394bd4133fa3c162e2d4fe932e311f3d829aa851340d69d6a044dd6ecc011b0d638eb37b1497298c6ae7b4b0fc643fbf9bd4420eb5b04e7538e279b2502c7b41c6ab07738a76e9599bbb27f7036d83498bdd69ae33c08e9819ace25c7b85cca33b6614d01c805bdec8a6026658b03c223e0f5358e50fa6c747801676c5590e50af591ca611bb9c2d0dae488e2776abd1fc34a7</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <tags>
        <tag>学习资料</tag>
      </tags>
  </entry>
  <entry>
    <title>欢迎来到我的博客</title>
    <url>/2024/06/20/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　这里是terryzhang的小站，本人是一位初中生。本站前身是利用文小站建的<a class="link"   href="https://terryzhang.wss.cc/" >个人网站<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> 。由于文小站因为部分原因停止了技术支持和服务器提供，于是现将个人网址移动到本站，原网址于2024年7月1日起作废，若访问原网址出现404，为正常现象。本站利用hexo作为框架，使用js，HTML，css等语言进行编写，相比原网站更加美观，自定义度较高，能够更好分享我的生活和经验，网站还有诸多需要优化之处，还请多多指教。业余爱好者水平有限，有不足之处还请各位见谅，本站不定期更新，欢迎评论和关注，在此谢谢您光顾本站</p>
<pre><code>                                                    Terryzhang
                                                    2024-6-20
</code></pre>
]]></content>
      <tags>
        <tag>公告通知</tag>
      </tags>
  </entry>
  <entry>
    <title>python新作——谷歌浏览器dino游戏</title>
    <url>/2024/06/20/python%E6%96%B0%E4%BD%9C%E2%80%94%E2%80%94%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8dino%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大家好，这是我建站后的第三篇（准确来说是第二篇）文章，看标题想必大家都知道作品叫什么了吧，就是谷歌浏览器在断网时会跳出的小恐龙游戏。今天我们利用python还原并提供您教程，并将代码开源，您可以随时取用，那我们……开整！</p>
<h3 id="第一部分-配置环境"><a href="#第一部分-配置环境" class="headerlink" title="第一部分:配置环境"></a>第一部分:配置环境</h3><p>编译器：pycharm社区版2024.1<br>插件：pygame</p>
<p>导入所用库,没有的可以去下载，具体方法不多赘述，网上有</p>
<div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br></pre></td></tr></table></figure></div>

<h3 id="第二部分：设置基础变量"><a href="#第二部分：设置基础变量" class="headerlink" title="第二部分：设置基础变量"></a>第二部分：设置基础变量</h3><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化pygame</span></span><br><span class="line">pygame.init()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置屏幕大小</span></span><br><span class="line">screen_width = <span class="number">800</span></span><br><span class="line">screen_height = <span class="number">400</span></span><br><span class="line">screen = pygame.display.set_mode((screen_width, screen_height))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置颜色</span></span><br><span class="line">white = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)  <span class="comment"># 背景颜色设置为白色</span></span><br><span class="line">black = (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">green = (<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 设置时钟</span></span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置字体</span></span><br><span class="line">font = pygame.font.Font(<span class="literal">None</span>, <span class="number">50</span>)</span><br></pre></td></tr></table></figure></div>

<p>接下来的步骤很重要，先放代码后讲解操作</p>
<div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    dino_image = pygame.image.load(<span class="string">&#x27;dino.png&#x27;</span>).convert_alpha()</span><br><span class="line">    cactus_image = pygame.image.load(<span class="string">&#x27;cactus.png&#x27;</span>).convert_alpha()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 缩小图像</span></span><br><span class="line">    scale_factor = <span class="number">0.4</span> <span class="comment"># 缩小因子</span></span><br><span class="line">    dino_image = pygame.transform.scale(dino_image, (<span class="built_in">int</span>(dino_image.get_width() * scale_factor), <span class="built_in">int</span>(dino_image.get_height() * scale_factor)))</span><br><span class="line">    cactus_image = pygame.transform.scale(cactus_image, (<span class="built_in">int</span>(cactus_image.get_width() * scale_factor), <span class="built_in">int</span>(cactus_image.get_height() * scale_factor)))</span><br><span class="line"><span class="keyword">except</span> pygame.error <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Cannot load image: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>有经验的老同志可能看出来了，第2，3行图片并没有，所以需要从网上找到恐龙和仙人掌图片后分别重命名为dino.png 和cactus.png，对应代码中的第2 3行，并且把图片和代码源文件放置在同一文件夹里面！！！！要不然系统找不到！！！！如果嫌烦在本文结尾评论或者在B站私信我，我会将图片发送</p>
<h3 id="第三部分：加载角色类"><a href="#第三部分：加载角色类" class="headerlink" title="第三部分：加载角色类"></a>第三部分：加载角色类</h3><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dino</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Dino, self).__init__()</span><br><span class="line">        self.image = dino_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = <span class="number">100</span></span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">50</span></span><br><span class="line">        self.gravity = <span class="number">0.5</span></span><br><span class="line">        self.velocity_y = <span class="number">0</span></span><br><span class="line">        self.jumping = <span class="literal">False</span></span><br><span class="line">        self.jump_height = -<span class="number">18</span> <span class="comment"># 跳跃高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.jumping:</span><br><span class="line">            self.velocity_y += self.gravity</span><br><span class="line">            self.rect.y += self.velocity_y</span><br><span class="line">            <span class="keyword">if</span> self.rect.bottom &gt;= screen_height - self.rect.height:</span><br><span class="line">                self.velocity_y = <span class="number">0</span></span><br><span class="line">                self.jumping = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.velocity_y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">jump</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.jumping:</span><br><span class="line">            self.jumping = <span class="literal">True</span></span><br><span class="line">            self.velocity_y = self.jump_height</span><br><span class="line"></span><br><span class="line"><span class="comment"># 障碍物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Obstacle</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Obstacle, self).__init__()</span><br><span class="line">        self.image = cactus_image</span><br><span class="line">        self.rect = self.image.get_rect()</span><br><span class="line">        self.rect.x = screen_width</span><br><span class="line">        self.rect.y = screen_height - self.rect.height - <span class="number">55</span>  <span class="comment"># 保持障碍物在屏幕底部的直线上</span></span><br><span class="line">        self.speed = <span class="number">2.7</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self</span>):</span><br><span class="line">        self.rect.x -= self.speed</span><br><span class="line">        <span class="keyword">if</span> self.rect.x &lt; -self.rect.width:</span><br><span class="line">            self.kill()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建小恐龙实例</span></span><br><span class="line">dino = Dino()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建障碍物群组</span></span><br><span class="line">obstacles = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分数</span></span><br><span class="line">score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 游戏状态</span></span><br><span class="line">game_over = <span class="literal">False</span></span><br></pre></td></tr></table></figure></div>
<p>这一步中跳跃高度是我调教过的，可以自己更改，也可以搭配我提供的图片使用</p>
<h3 id="第四部分：游戏主循环"><a href="#第四部分：游戏主循环" class="headerlink" title="第四部分：游戏主循环"></a>第四部分：游戏主循环</h3><div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 游戏主循环</span></span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            running = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.KEYDOWN <span class="keyword">and</span> event.key == pygame.K_SPACE:</span><br><span class="line">            dino.jump()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新小恐龙</span></span><br><span class="line">    dino.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新障碍物</span></span><br><span class="line">    obstacles.update()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 障碍物生成</span></span><br><span class="line">    <span class="keyword">if</span> random.randint(<span class="number">1</span>, <span class="number">120</span>) == <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over: <span class="comment"># 每120帧大约有1个障碍物生成</span></span><br><span class="line">        obstacles.add(Obstacle())</span><br><span class="line">        <span class="keyword">if</span> random.randint (<span class="number">1</span>,<span class="number">120</span>) == <span class="number">2</span> <span class="keyword">and</span> <span class="keyword">not</span> game_over:</span><br><span class="line">            obstacles.add = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 碰撞检测</span></span><br><span class="line">    <span class="keyword">if</span> pygame.sprite.spritecollide(dino, obstacles, <span class="literal">False</span>):</span><br><span class="line">        game_over = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制背景</span></span><br><span class="line">    screen.fill(white)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制小恐龙</span></span><br><span class="line">    screen.blit(dino.image, dino.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制障碍物</span></span><br><span class="line">    <span class="keyword">for</span> obstacle <span class="keyword">in</span> obstacles:</span><br><span class="line">        screen.blit(obstacle.image, obstacle.rect)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示分数</span></span><br><span class="line">    score_text = font.render(<span class="string">f&quot;Score: <span class="subst">&#123;<span class="built_in">int</span>(score)&#125;</span>&quot;</span>, <span class="literal">True</span>, black)</span><br><span class="line">    screen.blit(score_text, (<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新屏幕显示</span></span><br><span class="line">    pygame.display.flip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 控制游戏帧率</span></span><br><span class="line">    clock.tick(<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新分数</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> game_over:</span><br><span class="line">        score += <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 游戏结束处理</span></span><br><span class="line">    <span class="keyword">if</span> game_over:</span><br><span class="line">        screen.fill(black)</span><br><span class="line">        over_font = pygame.font.Font(<span class="literal">None</span>, <span class="number">70</span>)</span><br><span class="line">        over_text = over_font.render(<span class="string">&quot;Game Over&quot;</span>, <span class="literal">True</span>, white)</span><br><span class="line">        over_rect = over_text.get_rect(center=(screen_width // <span class="number">2</span>, screen_height // <span class="number">2</span>))</span><br><span class="line">        screen.blit(over_text, over_rect)</span><br><span class="line">        pygame.display.flip()</span><br><span class="line">        pygame.time.wait(<span class="number">3000</span>)</span><br><span class="line">        running = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出pygame</span></span><br><span class="line">pygame.quit()</span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure></div>
<p>这一部分需要注意的是：障碍物生成频率和帧率是我调教过的，不要乱改！！！不要乱改！！！改了以后就会鬼畜一样几十个卡在一起出现，别问我怎么知道的。</p>
<h4 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h4><p>以上就是我的最新python作品的代码开源和介绍了，本文和代码为我原创，您可以拿去自用，但这是创作者的心血！！所以如果您要摘编请与我联系（一初中生的文章有啥好转载的，对吧【滑稽】），视频介绍请见哔哩哔哩，预计7月上旬发布（账号：Terry—zhang同学，本网站有链接）在此感谢您的观看，欢迎评论。</p>
]]></content>
      <tags>
        <tag>数码编程</tag>
      </tags>
  </entry>
  <entry>
    <title>studio从入门到精通——像乐高设计师一样创作   一</title>
    <url>/2024/11/07/studio%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E2%80%94%E2%80%94%E5%83%8F%E4%B9%90%E9%AB%98%E8%AE%BE%E8%AE%A1%E5%B8%88%E4%B8%80%E6%A0%B7%E5%88%9B%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>legostudio是丹麦乐高公司收购的bricklink公司开发的一款虚拟搭建软件，博主的代表作：<a class="link"   href="https://www.bilibili.com/opus/926206149746753571?spm_id_from=333.999.0.0/" >上海地铁02a01型列车<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>就是利用此软件制作，接下来，我将详细指导您下载，使用 lego studio2.0</p>
<h2 id="第一部分-下载："><a href="#第一部分-下载：" class="headerlink" title="第一部分 下载："></a>第一部分 下载：</h2><p>studio是由丹麦bricklink公司所开发运营，可点击<a class="link"   href="https://www.bricklink.com/v3/studio/download.page" >下载链接<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，如下<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic.imgdb.cn/item/675af1f4d0e0a243d4e30661.png"
                      alt="bricklink" title="可选的标题"
                ><br>点击下载Windows版本，windows版本需要大于win7。按照常规流程和安装提示安装即可，此处不过多赘述</p>

  <div class="note p-4 mb-4 rounded-small blue">
    <p>建议下载地址选择C盘，避免作品丢失</p>

  </div>

<h2 id="第二部分-初阶使用："><a href="#第二部分-初阶使用：" class="headerlink" title="第二部分 初阶使用："></a>第二部分 初阶使用：</h2><p>当完成下载后，双击打开，studio2.0。开启时加载时间可能会很长，请耐心等待，若提示“未响应”，不必惊慌，大约1分钟后会自动启动。当您的电脑出现如下的界面，恭喜您，你正式成为了一名乐高的mocer<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic.imgdb.cn/item/675af24ad0e0a243d4e3066e.png"
                      alt="studio" title="可选的标题"
                ><br>开始界面的“p42”和”hxd1”是博主的作品，您的主页没有不必惊慌。<br>接下来点击”create“按钮打开一个新的界面，如下<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic.imgdb.cn/item/675af268d0e0a243d4e30673.png"
                      alt="studio work" title="可选的标题"
                >这张图下面的指导可以对照。</p>
<h4 id="2-1-页面功能介绍"><a href="#2-1-页面功能介绍" class="headerlink" title="2.1 页面功能介绍"></a>2.1 页面功能介绍</h4><p>1.在新界面左侧许多的砖块，您可以通过在对应的砖块上用左键拖动至工作区，当砖块被选中时轮廓呈蓝色，若需要改变砖块颜色，请选中后在右侧”colour palette”处选择颜色并单击想要的颜色。</p>
<p>2.在页面的左下角有一个”total parts”提示框，您可以通过此处查看您的用砖情况</p>
<p>3.在工作区的左侧有砖块分类区域，您可以查找砖块编号和零件种类</p>
<p>请在开始创作前将顶部菜单栏的”snap”按钮点亮至蓝色，如下<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic.imgdb.cn/item/675af2bad0e0a243d4e30679.png"
                      alt="菜单设置" title="可选的标题"
                ></p>
<h4 id="2-2-操作指导"><a href="#2-2-操作指导" class="headerlink" title="2.2 操作指导"></a>2.2 操作指导</h4><p>下面为基本鼠标操作指导：</p>

  <div class="note p-4 mb-4 rounded-small green">
    <p>按住右键拖动为改变作品视角</p>

  </div>


  <div class="note p-4 mb-4 rounded-small green">
    <p>键盘上的”w“ 键为上升视角，”s“键为下降视角，”a“键向左移动视角，”d“键向右移动视角</p>

  </div>


  <div class="note p-4 mb-4 rounded-small green">
    <p>左键为拖动砖块，选中砖块。当砖块被选中时轮廓呈蓝色</p>

  </div>


  <div class="note p-4 mb-4 rounded-small green">
    <p>键盘上“上下左右”按键可以调节零件或作品方向。若需要细调角度，可用左键单击零件或选中后出现两个蓝色按钮，点击左侧的圆弧箭头按钮，即可开始调节</p>

  </div>

<p>具体操作可观看如下视频，可最大化观看。进阶教程将后期发布</p>
 
 <iframe src="https://cccimg.com/player.php?hash=b762a42e61b9eb15dd2beedace135d0c" width="400" height="300" scrolling="no" frameborder="0"></iframe>

]]></content>
      <tags>
        <tag>乐高</tag>
      </tags>
  </entry>
  <entry>
    <title>本站10月更新日志  及第3季度运营报告</title>
    <url>/2024/10/06/%E6%9C%AC%E7%AB%9910%E6%9C%88%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97%20%20%E5%8F%8A%E7%AC%AC3%E5%AD%A3%E5%BA%A6%E8%BF%90%E8%90%A5%E6%8A%A5%E5%91%8A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>
  <div class="note p-4 mb-4 rounded-small blue">
    <p>域名已更新至”mrzxr.top”!!!!!</p>

  </div>
<h2 id="第一部分：更新功能"><a href="#第一部分：更新功能" class="headerlink" title="第一部分：更新功能"></a>第一部分：更新功能</h2><p>本次更新主要集中于对于网页模板的改善和分类以及更新了域名”mrzxr.top”，使得整体页面更出彩，更个性</p>
<h3 id="1-1新增归档功能"><a href="#1-1新增归档功能" class="headerlink" title="1.1新增归档功能."></a>1.1新增归档功能.</h3><p>在网页菜单栏中新增“archive”按钮，访客可以通过点击归档按钮看到本博客的全部文章和发布时间，使得博文更加条理清晰。</p>
<h3 id="1-2新增搜索功能"><a href="#1-2新增搜索功能" class="headerlink" title="1.2新增搜索功能."></a>1.2新增搜索功能.</h3><p>访客可以在网页右上角点击放大镜按钮即可看到搜索框，通过搜索关键词即可定位到具体博文，方便查找博客内容。</p>
<h3 id="1-3新增”tags”链接"><a href="#1-3新增”tags”链接" class="headerlink" title="1.3新增”tags”链接."></a>1.3新增”tags”链接.</h3><p>访客可点击”link”按钮在跳出的二级菜单栏中找到“学习资料”、“数码编程”、“乐高”、“公告通知”四个标签，选择需要的链接点击即可查找到与该标签内容相关的文章。</p>
<h3 id="1-4新增评论及留言板功能"><a href="#1-4新增评论及留言板功能" class="headerlink" title="1.4新增评论及留言板功能."></a>1.4新增评论及留言板功能.</h3><p>本站近期开通了评论功能，访客可在文章末尾评论，点击菜单栏的”comment”按钮可跳转至<a class="link"   href="https://comment.mrzxr.top/" >留言板<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>评论，关于博客文章的评论请在文章末尾评论，关于博客的杂谈等请去往留言板</p>
<h3 id="1-5页面改版"><a href="#1-5页面改版" class="headerlink" title="1.5页面改版."></a>1.5页面改版.</h3><p>本站将网页背景和主色调进行更改，更符合本网页的主题和作者审美，更加个性化。</p>
<h2 id="第二部分：运营报告"><a href="#第二部分：运营报告" class="headerlink" title="第二部分：运营报告."></a>第二部分：运营报告.</h2><p>本站始建于2024年6月20日，至今已安全运行108天，共计产出5篇文章，生成4个标签，其中一篇正在连载中（托更中），预计第四季度可产出2-3篇完整文章，欢迎持续关注。</p>
<h2 id="结语："><a href="#结语：" class="headerlink" title="结语："></a>结语：</h2><p>我是terryzhang，一个平凡的初中生。相见就是缘分。这里，是我的后花园，也是大家的茶馆。欢迎关注我的blog、bilibili，也欢迎去留言版评论，期待下次和你相见~。</p>
]]></content>
      <tags>
        <tag>公告通知</tag>
      </tags>
  </entry>
</search>
